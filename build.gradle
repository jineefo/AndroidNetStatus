apply plugin: 'com.android.library'
apply plugin: 'maven'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

/**
 * 构建脚本配置
 */
buildscript {

    /**
     * 定义仓库: 可以是一个文件系统或者一个中心服务器
     */
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenLocal()
        jcenter()
        mavenCentral()

        google()
        maven {
            url 'https://maven.google.com'
        }
    }
    /**
     * 定义依赖
     */
    dependencies {

        /**
         * android 插件
         */
        classpath 'com.android.tools.build:gradle:3.1.0'

    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenLocal()
        jcenter()
        mavenCentral()
        google()
        maven { url "http://nexus.tongdao.cn/nexus/content/repositories/releases" }
        maven { url "http://nexus.tongdao.cn/nexus/content/repositories/releases-snapshots" }
    }

}
android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.code.findbugs:jsr305:1.3.9'
}
